// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/openconfig/gnmi-gateway/gateway/exporters (interfaces: Exporter)

// Package exporters_test is a generated GoMock package.
package exporters_test

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	cache "github.com/openconfig/gnmi-gateway/gateway/cache"
	ctree "github.com/openconfig/gnmi/ctree"
)

// MockExporter is a mock of Exporter interface
type MockExporter struct {
	ctrl     *gomock.Controller
	recorder *MockExporterMockRecorder
}

// MockExporterMockRecorder is the mock recorder for MockExporter
type MockExporterMockRecorder struct {
	mock *MockExporter
}

// NewMockExporter creates a new mock instance
func NewMockExporter(ctrl *gomock.Controller) *MockExporter {
	mock := &MockExporter{ctrl: ctrl}
	mock.recorder = &MockExporterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockExporter) EXPECT() *MockExporterMockRecorder {
	return m.recorder
}

// Export mocks base method
func (m *MockExporter) Export(arg0 *ctree.Leaf) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Export", arg0)
}

// Export indicates an expected call of Export
func (mr *MockExporterMockRecorder) Export(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Export", reflect.TypeOf((*MockExporter)(nil).Export), arg0)
}

// Start mocks base method
func (m *MockExporter) Start(arg0 *cache.Cache) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Start", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Start indicates an expected call of Start
func (mr *MockExporterMockRecorder) Start(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Start", reflect.TypeOf((*MockExporter)(nil).Start), arg0)
}
